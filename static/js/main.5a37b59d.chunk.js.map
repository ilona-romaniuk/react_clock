{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["avoidTimezoneIssues","time","toUTCString","slice","Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","nameId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,EAAoBC,GAC3B,OAAOA,EAAKC,cAAcC,OAAO,IAAK,GAGjC,IAAMC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAKd,EAAoB,EAAKK,MAAMC,UAC3C,OAbP,gCAgBE,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAnBpE,kCAuBE,WACEN,OAAOS,cAAcV,KAAKD,WAxB9B,oBA2BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,OAGd,6CAEA,sBAAMI,UAAU,cAAhB,SACGpB,EAAoBS,KAAKJ,MAAMC,gBArC1C,GAA2Be,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWvB,OAAO,GAE3C,MAAM,SAAN,OAAgBqB,GAQX,IAAMG,EAAb,4MACEtB,MAAe,CACbuB,UAAU,EACVC,UAAW,WAHf,EAMEC,OAAS,EANX,EA0BEC,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKrB,SAAS,CAAEgB,UAAU,KA7B9B,EAgCEM,YAAc,WACP,EAAK7B,MAAMuB,UACd,EAAKhB,SAAS,CAAEgB,UAAU,KAlChC,uDAQE,WAA2B,IAAD,OACxBO,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAE9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,aAExCzB,KAAKqB,OAASpB,OAAOC,aAAY,WAC/B,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,QAfP,kCAkBE,WACEY,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAE9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,aAExCxB,OAAOS,cAAcV,KAAKqB,UAvB9B,oBAsCE,WACE,MAAgCrB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,KAAMa,WA9CvB,GAAyBR,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.5a37b59d.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nfunction avoidTimezoneIssues(time: Date) {\n  return time.toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(avoidTimezoneIssues(this.state.today));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        <span> time is </span>\n\n        <span className=\"Clock__time\">\n          {avoidTimezoneIssues(this.state.today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameId = 0;\n\n  componentDidMount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    document.addEventListener('click', this.handleClick);\n\n    this.nameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.addEventListener('contextmenu', this.handleContextMenu);\n\n    document.addEventListener('click', this.handleClick);\n\n    window.clearInterval(this.nameId);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}